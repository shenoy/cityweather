{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/cityweather/src/containers/weather_list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\nclass WeatherList extends React.Component {\n  renderWeather(cityData) {\n    const name = cityData.city.name;\n    const temps = cityData.list.map(x => x.main.temp);\n    const pressures = cityData.list.map(x => x.main.pressure);\n    const humidities = cityData.list.map(x => x.main.humidity);\n    return React.createElement(\"tr\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: temps,\n      color: \"red\",\n      units: \"K\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: pressures,\n      color: \"green\",\n      units: \"hPa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: humidities,\n      color: \"black\",\n      units: \"%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      className: \"ui celled table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Temperature(K)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Pressure(hPa)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Humidity(%)\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.weather.map(this.renderWeather)));\n  }\n\n}\n\nconst mapStateToProps = ({\n  weather\n}) => {\n  return {\n    weather\n  };\n};\n\nexport default connect(mapStateToProps)(WeatherList);","map":{"version":3,"sources":["/home/rajesh/cityweather/src/containers/weather_list.js"],"names":["React","connect","Chart","WeatherList","Component","renderWeather","cityData","name","city","temps","list","map","x","main","temp","pressures","pressure","humidities","humidity","render","props","weather","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAGxCC,EAAAA,aAAa,CAACC,QAAD,EAAW;AACtB,UAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAA3B;AACA,UAAME,KAAK,GAAGH,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,IAAhC,CAAd;AACA,UAAMC,SAAS,GAAGT,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOG,QAAhC,CAAlB;AACA,UAAMC,UAAU,GAAGX,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOK,QAAhC,CAAnB;AAGA,WACE;AAAI,MAAA,GAAG,EAAEX,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,KAAb;AAAoB,MAAA,KAAK,EAAC,KAA1B;AAAgC,MAAA,KAAK,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEM,SAAb;AAAwB,MAAA,KAAK,EAAC,OAA9B;AAAsC,MAAA,KAAK,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,UAAb;AAAyB,MAAA,KAAK,EAAC,OAA/B;AAAuC,MAAA,KAAK,EAAC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF;AAcD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,OAAX,CAAmBV,GAAnB,CAAuB,KAAKN,aAA5B,CADH,CATF,CADF;AAeD;;AA1CuC;;AA6C1C,MAAMiB,eAAe,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAiB;AAEvC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AAED,CAJD;;AAMA,eAAepB,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\n\nclass WeatherList extends React.Component {\n\n\n  renderWeather(cityData) {\n    const name = cityData.city.name;\n    const temps = cityData.list.map((x) => x.main.temp);\n    const pressures = cityData.list.map((x) => x.main.pressure);\n    const humidities = cityData.list.map((x) => x.main.humidity);\n\n\n    return (\n      <tr key={name}>\n        <td>{name}</td>\n        <td>\n          <Chart data={temps} color=\"red\" units=\"K\" />\n        </td>\n        <td>\n          <Chart data={pressures} color=\"green\" units=\"hPa\" />\n        </td>\n        <td>\n          <Chart data={humidities} color=\"black\" units=\"%\" />\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <table className=\"ui celled table\">\n        <thead>\n          <tr>\n            <th>City</th>\n            <th>Temperature(K)</th>\n            <th>Pressure(hPa)</th>\n            <th>Humidity(%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.weather.map(this.renderWeather)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = ({ weather }) => {\n\n  return { weather };\n\n}\n\nexport default connect(mapStateToProps)(WeatherList)"]},"metadata":{},"sourceType":"module"}